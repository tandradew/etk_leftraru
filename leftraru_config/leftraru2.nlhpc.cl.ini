
[leftraru2.nlhpc.cl]

# This machine description file is used internally by simfactory as a template
# during the sim setup and sim setup-silent commands
# Edit at your own risk
# Machine description
nickname        = leftraru2.nlhpc.cl
name            = leftraru2.nlhpc.cl
location        = somewhere
description     = Whatever
status          = personal

# Access to this machine
hostname        = leftraru2.nlhpc.cl
aliaspattern    = ^generic\.some\.where$

# the configure scripts strip /usr/local from XXX_DIR to avoid chosing system
# libraries, however not all compilers will search in there by default Here we
# explicitly add the filtered out locations so that they appear last in the
# search path removed by strip-libdirs.sh
# removed by strip-incdirs.sh
envsetup = <<EOF
export LIBRARY_PATH="${LIBRARY_PATH+$LIBRARY_PATH:}/usr/local/lib64:/usr/local/lib:/usr/lib64:/usr/lib:/lib64:/lib"
export CPATH="${CPATH+$CPATH:}/usr/local/include:/usr/include:/include"
EOF


# Source tree management
sourcebasedir   = /home/tandrade/etk_leftraru
optionlist      = leftraru.cfg
submitscript    = leftraru.sub
runscript       = leftraru.run
make            = make -j@MAKEJOBS@
basedir         = /home/tandrade/simulations/sims2
ppn             = 20
max-num-threads = 20
num-threads     = 10
nodes           = 1
submit          = sbatch @SCRIPTFILE@; sleep 3; echo "using sbatch"
getstatus       = squeue -j  @JOB_ID@

#submit          = exec nohup @SCRIPTFILE@ < /dev/null > @RUNDIR@/@SIMULATION_NAME@.out 2> @RUNDIR@/@SIMULATION_NAME@.err & echo $!
#getstatus       = ps @JOB_ID@

# need to kill the whole set of processes descending from @JOB_ID@, not just the
# (simfactory) top-level process
#stop            = pkill -g $(ps -o pgid= -p @JOB_ID@)

stop            = scancel @JOB_ID@
submitpattern   = (.*)
statuspattern   = "^ *@JOB_ID@ "
queuedpattern   = $^
runningpattern  = ^
holdingpattern  = $^
exechost        = echo localhost
exechostpattern = (.*)
stdout          = cat @SIMULATION_NAME@.out
stderr          = cat @SIMULATION_NAME@.err
stdout-follow   = tail -n 100 -f @SIMULATION_NAME@.out @SIMULATION_NAME@.err
